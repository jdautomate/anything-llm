---
# Source: anything-llm/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: release-name
---
# Source: anything-llm/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: anything-llm-config
  namespace: release-name
  labels:
    helm.sh/chart: anything-llm-1.1.2
    app.kubernetes.io/name: anything-llm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.2.2
    app.kubernetes.io/managed-by: Helm
data:
  EMBEDDING_MODEL_MAX_CHUNK_LENGTH: "8192"
  EMBEDDING_MODEL_PREF: "nomic-embed-text:1.5"
  STORAGE_DIR: "/app/server/storage"
  TTS_PROVIDER: "native"
  VECTOR_DB: "lancedb"
  WHISPER_PROVIDER: "local"
---
# Source: anything-llm/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: server-storage
  namespace: release-name
  labels:
    helm.sh/chart: anything-llm-1.1.2
    app.kubernetes.io/name: anything-llm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.2.2
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 32Gi
---
# Source: anything-llm/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: anything-llm
  namespace: release-name
  labels:
    helm.sh/chart: anything-llm-1.1.2
    app.kubernetes.io/name: anything-llm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.2.2
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: anything-llm
    app.kubernetes.io/instance: release-name
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001
  type: ClusterIP
---
# Source: anything-llm/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: anything-llm
  namespace: release-name
  labels:
    helm.sh/chart: anything-llm-1.1.2
    app.kubernetes.io/name: anything-llm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.2.2
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: anything-llm
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: anything-llm
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: anything-llm
          image: "543714519113.dkr.ecr.us-west-1.amazonaws.com/ghcr/mintplex-labs/anything-llm:1.2.2"
          ports:
            - containerPort: 3001
          envFrom:
            - configMapRef:
                name: anything-llm-config
          volumeMounts:
            - name: server-storage
              mountPath: /app/server/storage
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1000
            runAsGroup: 1000
            capabilities:
              add:
                - SYS_ADMIN
      volumes:
        - name: server-storage
          persistentVolumeClaim:
            claimName: server-storage
      restartPolicy: Always
---
# Source: anything-llm/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: anything-llm-ingress
  namespace: release-name
  labels:
    helm.sh/chart: anything-llm-1.1.2
    app.kubernetes.io/name: anything-llm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: 1.2.2
    app.kubernetes.io/managed-by: Helm
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-west-1:817264447024:certificate/77017270-ffee-447d-ac83-c906167e9e02"
    alb.ingress.kubernetes.io/scheme: "internal"
    alb.ingress.kubernetes.io/success-codes: "200-499"
    alb.ingress.kubernetes.io/tags: "environment=dev,task-group=website,created-by=eks,maintainer=justin.leber,role=alb,owner=web"
    alb.ingress.kubernetes.io/target-type: "ip"
    cert-manager.io/cluster-issuer: "letsencrypt-dns"
    cert-manager.io/renew-before: "360h"
    external-dns.alpha.kubernetes.io/hostname: "anythingllm.us-west-1.eks.dev.saas.openvpn.in"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  ingressClassName: alb
  rules:
    - host: anythingllm-dev.openvpn.in
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: anything-llm
                port:
                  number: 3001
  tls:
    - hosts:
        - llm.example.com
      secretName: anything-llm-tls
